<%= if @docker do %>FROM elixir:1.7.4

# NOTE the WORKDIR should not be the users home dir as the will copy container cookie into host machine
WORKDIR /opt/app

# Add tools needed for development
# inotify-tools: gives filesystem events that are used to trigger recompilation
<%= if @node_assets do %>RUN curl -sL https://deb.nodesource.com/setup_11.x | bash -<% end %>
RUN apt-get update && apt-get install -y inotify-tools<%= if @node_assets do %> nodejs<% end %>

WORKDIR /opt/app
ENV INSIDE_CONTAINER=1

# Build hex and rebar as a separate Docker layer
RUN mix local.hex --force && mix local.rebar --force
RUN mkdir ../deps && mkdir ../_build

# Build all dependencies separately to the application code
RUN mkdir config
COPY config/* config/
COPY mix.* ./
RUN mix do deps.get, deps.compile
RUN MIX_ENV=test mix deps.compile

# Add application code as final layer
#   This will skip the _build and deps directories as per .dockerignore
COPY . .

# Make sure the Docker image can be started without waiting for the project to compile
# mix deps.get is needed to update the freshly copied mix.lock
RUN mix do deps.get, compile
RUN MIX_ENV=test mix do deps.get, compile

CMD ["sh", "./bin/start.sh"]
<% end %>
